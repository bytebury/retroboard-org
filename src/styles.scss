// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the theme object.
$retroboard-org-theme: mat.define-theme(
  (
    color: (
      theme-type: light,
      primary: mat.$azure-palette,
      tertiary: mat.$blue-palette,
    ),
    density: (
      scale: 0,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
:root {
  @include mat.all-component-themes($retroboard-org-theme);
  --mdc-dialog-container-color: #fff;
}

// Comment out the line below if you want to use the pre-defined typography utility classes.
// For more information: https://material.angular.io/guide/typography#using-typography-styles-in-your-application.
// @include mat.typography-hierarchy($retroboard-org-theme);

// Comment out the line below if you want to use the deprecated `color` inputs.
// @include mat.color-variants-backwards-compatibility($retroboard-org-theme);
@tailwind base;
@tailwind components;
@tailwind utilities;

html,
body,
app-root {
  @apply m-0 p-0 flex flex-col;
  min-height: 100vh;
  min-height: 100dvh;
}

main {
  @apply flex flex-col h-full grow pt-12;
}

@layer base {
  h1 {
    @apply font-extrabold text-xl;
  }

  h2 {
    @apply font-bold text-lg;
  }

  input[type="text"] {
    @apply transition-colors duration-200;
    @apply border border-gray-300 rounded-2xl py-2 px-3;
    @apply focus:border-blue-700;
  }

  input,
  textarea {
    @apply outline-none w-full;
  }

  textarea {
    @apply rounded-2xl p-3;
    @apply border border-gray-300 focus:border-blue-700;
  }
}

@layer components {
  button {
    @apply transition-colors duration-200;
    @apply px-3 py-1.5 rounded-2xl cursor-pointer;
    @apply flex items-center hover:bg-blue-100;

    &.primary {
      @apply text-white bg-blue-700 hover:bg-blue-800 font-bold;
    }

    &:disabled {
      @apply bg-gray-200 text-gray-700 cursor-not-allowed hover:bg-gray-300;
    }
  }
}

p-autocomplete {
  @apply block max-w-full;

  &:has(.p-autocomplete-panel) {
    input.p-autocomplete-input {
      @apply focus:rounded-b-none;
    }
  }

  .p-autocomplete {
    @apply block;
  }

  .p-overlay {
    @apply bg-white;
    @apply border border-blue-700 rounded-b-2xl border-t-0;
  }

  .p-autocomplete-panel {
    .p-focus {
      @apply bg-gray-200;
    }

    .p-autocomplete-empty-message,
    .p-autocomplete-item {
      @apply p-2 px-3 hover:bg-gray-100 max-w-full whitespace-normal;
    }

    .p-autocomplete-empty-message {
      @apply text-gray-500 hover:bg-white focus:bg-white;
    }

    &:last-of-type {
      @apply rounded-b-2xl;
    }
  }

  .p-hidden-accessible {
    @apply hidden;
  }
}

.mat-mdc-dialog-container {
  @apply w-full md:w-[500px];
}

.mat-mdc-dialog-component-host:first-child {
  @apply flex flex-col gap-4 p-5;

  button {
    @apply rounded-2xl py-1.5 px-3;
    @apply transition-colors duration-200;

    &.cancel {
      @apply bg-white;

      &:hover {
        @apply bg-gray-100;
      }
    }
  }
}
